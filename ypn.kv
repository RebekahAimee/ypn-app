# The MIT License (MIT)
# Copyright (c) 2016 Young Professionals Network

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

RootWidget:
# ^^^ This thing is important. Don't delete it.
# The classes defined in brackets are just classes. This widget here actually
# tells the interpreter to display the root widget, which starts off showing
# the Calendar page but can be cleared to display other stuff.
# If you delete it, you'll get a blank screen.
# If you replace it with the name of another widget, that one will display
# instead, which can be a useful debugging tool. Otherwise, don't touch!
# It's defined just below.

<RootWidget>:
    # inherits from BoxLayout; this widget has its own Python class.
    # It's useful to have a designated root widget because of
    # self.clear_widgets(), which clears all the /children/ of that widget,
    # and because app.root stores some important app-wide methods that are
    # easier to access this way.
    # There may be a simpler or better-encapsulated way to do these things,
    # and you're welcome to clean up if so, but just putting MenuPage as root
    # isn't it.
    MenuPage:

# PAGES
<CalendarPage>:
    # inherits from BoxLayout
    orientation: "vertical"
    
    YpnHeader:
        # the header is size_hint_y 10
    Button:
        #right now this is a button, for display purposes (shows up better)
        #it's a placeholder anyway.
        size_hint_y: 50
        text: "[CALENDAR]"
        
    # this really needs to be a ListView, not just a bunch of buttons...
    # except Kivy is working on the ListView concept--they're deprecating it in
    # favor of an MVC "RecycleView" widget instead.
    # Looks like the documentation on this has come in. Not all of it, but
    # there's always the source code...
    Label:
        size_hint_y: 10
        text: "Upcoming Events"
    Label:
        size_hint_y: 10
        text: "Event 1"
    Label:
        size_hint_y: 10
        text: "Event 2"
    Label:
        size_hint_y: 10
        text: "Event 3"

<DiscountsPage>:
    # Inherits from BoxLayout, has its own Python class
    orientation: "vertical"
    
    YpnHeader:
        # the header is size_hint_y 10
    
    DiscountSearchBar:
        # this is also size_hint_y 10
    
    Button:
        size_hint_y: 20
        text: "Abby's Bakery"

    Button:
        size_hint_y: 20
        text: "Benton Bros. Car Wash"
        
    Button:
        size_hint_y: 20
        text: "Cream of the Crop Farmers Market"
        
    Button:
        size_hint_y: 20
        text: "Dog Bubbles Grooming"

<ArticlesPage>:
    #inherits from BoxLayout
    orientation: "vertical"
    
    YpnHeader:
        #size_hint_y is 10 for this widget
    
    # this should be a RecycleView once that gets documented
    Button:
        size_hint_y: 15
        text: "Summer Cookout"
    Button:
        size_hint_y: 15
        text: "Last Meeting"
    Button:
        size_hint_y: 15
        text: "Members' Dogs"
    Button:
        size_hint_y: 15
        text: "Welcome, New Members!"
    Button:
        size_hint_y: 15
        text: "Food Bank Volunteering"
    Button:
        size_hint_y: 15
        text: "Blood Drive"
    
<MenuPage>:
    # inherits from BoxLayout
    orientation: "vertical"
    MenuHeader:
    
    MenuButton:
        text: "Event Calendar"
        on_press: app.root.display_calendar_page()
    MenuButton:
        text: "Member Discounts"
        on_press: app.root.display_discounts_page()
    MenuButton:
        text: "Newsletter"
        on_press: app.root.display_articles_page()
    MenuButton:
        text: "About Us"
        on_press: app.root.display_about_us_page()
    MenuButton:
        text: "Search"
        on_press: app.root.display_search_page()
    Label:
        #placeholder
        size_hint_y: 15
        text: ""
        
<AboutUsPage>:
    # inherits from BoxLayout
    orientation: "vertical"
    YpnHeader:
        # size_hint_y: 10
    
    Button:
        size_hint_y: 30
        text: "[Group Picture]"
        
    BoxLayout:
        size_hint_y: 15
        orientation: "horizontal"
        Button:
            text: "FAQ"
        Button:
            text: "Join Us"
        Button:
            text: "Leadership"
    
    Label:
        size_hint_y: 45
        #sample text
        text: "The Young Professionals Network is an organization dedicated to..."

<SearchPage>:
    # inherits from BoxLayout
    orientation: "vertical"

    YpnHeader:
        # size_hint_y: 10

    BoxLayout:
        orientation: "horizontal"
        size_hint_y: 10

        TextInput:
            multiline: False
            size_hint_x: 80

        Button:
            text: "Search"
            size_hint_x: 20

    Button:
        size_hint_y: 80
        text: "Placeholder for search results"


<RVTestDrivePage>:
    # Not a recreational vehicle.
    # None of this is working right now. RecycleView won't even import.
    viewclass: "Button"
    RecycleBoxLayout:
    # ^ undocumented widget, grabbing sample code
        default_size: None, dp(56)
        default_size_hint: 1, None
        size_hint_y: None
        height: self.minimum_height
        orientation: 'vertical'

# WIDGETS

<MenuHeader@BoxLayout>:
    orientation: "horizontal"
    size_hint_y: 10
    
    Label:
        size_hint_x: 50
        text: "Main Menu"
    Button:
        size_hint_x: 25
        text: "X"
        on_press: app.stop()
    Button: 
        size_hint_x: 25
        text: "Back"
        on_press: app.root.display_last_page()

<YpnHeader@BoxLayout>:
    #should contain logo, app-wide search bar, and pulldown menu.
    #For now this will do.
    # You have to specify there's a YpnHeader widget at the top of every Page
    # class you create, but doing it like this (as opposed to building it into
    # a Page class that the other pages inherit from) lets you omit the header
    # on certain pages if you choose. On the one hand, DRY, but on the other,
    # inheritance is not a panacea, and this is probably the best method since
    # it lends us a bit of flexibility in exchange for repeating one short,
    # easily-understood line of code.
    
    orientation: "horizontal"
    size_hint_y: 10
    
    Label:
        size_hint_x: 25
        text: "YPN"
        #later this will be an image
    Label:
        size_hint_x: 50
        text: "[SEARCH BAR]"
        #later this will be a search bar
    Button:
        size_hint_x: 25
        text: "To menu"
        on_press: app.root.display_menu_page()
        # if you want a more traditional menu later, try Kivy's Spinner widget

<DiscountSearchBar@BoxLayout>:
    # NOTE FOR NEWBIES TO KIVY who are trying to work on this code
    # Making this functional will mean some more complex logic stuff over in
    # the Python document, to retrieve the TextBox's value when the button is
    # tapped. If I remember right, whenever you need to do processing on user
    # data in a particular element or whatever, you need to import the
    # appropriate Kivy widgets/layouts/whatever you're using into your Python
    # code file and write the logic there.
    #
    # That's not to deter you from learning how this works and trying to code
    # it--this note is just to steer you in the right direction. Just remember:
    # logic goes in the Python code, display definitions go in the kvlang file.
    
    orientation: "horizontal"
    size_hint_y: 10
    
    TextInput:
        size_hint_x: 60
        id: search_input
    
    Button: 
        size_hint_x: 40
        on_press: self.parent.parent.search_button(self.parent)
        text: "Search Discounts"
        
<DiscountSearchKeywords@BoxLayout>:
    orientation: "horizontal"
    
    # these options are pretty general/constant; I feel ok hard-coding them in
    # less appealing is the lack of padding/the fact that the spacing will look
    # kind of off. We'll have to find a way to fix that later.
    
    Button:
        size_hint_x: 25
        text: "Near Me"
        
    Button:
        size_hint_x: 25
        text: "Food"
 
    Button:
        size_hint_x: 25
        text: "Items"
    
    Button:
        size_hint_x: 25
        text: "Services"
    
<MenuButton@Button>:
    size_hint_y: 15
    
    
    
    
    



    
